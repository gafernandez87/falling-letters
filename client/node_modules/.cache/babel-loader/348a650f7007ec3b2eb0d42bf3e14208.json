{"ast":null,"code":"var _jsxFileName = \"/Users/gastonfernandez/workspace/falling-letters/src/components/Game.js\";\nimport React from 'react';\nconst letterList = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"];\n\nclass Game extends React.Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = () => {\n      document.addEventListener(\"keydown\", this.handleKeyPress);\n      this.mainLoop();\n    };\n\n    this.mainLoop = () => {\n      let _this$state = this.state,\n          gameSpeed = _this$state.gameSpeed,\n          letters = _this$state.letters,\n          lettersGenerated = _this$state.lettersGenerated,\n          pressedLetters = _this$state.pressedLetters;\n      gameSpeed += 0.005;\n\n      if (gameSpeed > 2) {\n        gameSpeed = 1;\n      }\n\n      if (pressedLetters) {\n        letters = letters.map(letter => {\n          if (pressedLetters.indexOf(letter.letter) === -1) {\n            return letter;\n          }\n        });\n        pressedLetters = [];\n      }\n\n      if (gameSpeed === 1) {\n        lettersGenerated++;\n        const randomLetter = this.getRandomeLetter();\n        letters.push({\n          letter: randomLetter,\n          key: lettersGenerated,\n          position: {\n            x: this.getRandom(0, window.innerWidth),\n            y: 20\n          }\n        });\n      }\n\n      letters.forEach(letter => {\n        letter.position.y += 0.1;\n      });\n      const loop = requestAnimationFrame(this.mainLoop);\n      this.setState({\n        letters,\n        lettersGenerated,\n        gameSpeed,\n        loop\n      });\n    };\n\n    this.handleKeyPress = e => {\n      let pressedLetters = this.state.pressedLetters;\n      pressedLetters.push(e.key.toUpperCase());\n      this.setState({\n        pressedLetters\n      });\n    };\n\n    this.getRandomeLetter = () => {\n      const randomIndex = Math.floor(Math.random() * letterList.length + 1);\n      return letterList[randomIndex];\n    };\n\n    this.getRandom = (min, max) => {\n      return Math.random() * (max - min) + min;\n    };\n\n    this.stopGame = () => {\n      cancelAnimationFrame(this.state.loop);\n    };\n\n    this.startGame = () => {\n      const loop = requestAnimationFrame(this.mainLoop);\n      this.setState({\n        loop\n      });\n    };\n\n    this.drawLetter = letter => {\n      return React.createElement(\"span\", {\n        key: letter.key,\n        style: {\n          position: \"absolute\",\n          left: letter.position.x,\n          top: letter.position.y\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, letter.letter);\n    };\n\n    this.state = {\n      gameSpeed: 1,\n      loop: undefined,\n      letters: [],\n      pressedLetters: [],\n      lettersGenerated: 0\n    };\n  }\n\n  render() {\n    const letters = this.state.letters;\n    return React.createElement(\"div\", {\n      className: \"game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"speed: \", this.state.gameSpeed), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"loop: \", this.state.lettersGenerated), React.createElement(\"button\", {\n      onClick: this.stopGame,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"STOP\"), React.createElement(\"button\", {\n      onClick: this.startGame,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"START\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, this.state.a), letters && letters.map(letter => this.drawLetter(letter)));\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/Users/gastonfernandez/workspace/falling-letters/src/components/Game.js"],"names":["React","letterList","Game","Component","constructor","componentDidMount","document","addEventListener","handleKeyPress","mainLoop","state","gameSpeed","letters","lettersGenerated","pressedLetters","map","letter","indexOf","randomLetter","getRandomeLetter","push","key","position","x","getRandom","window","innerWidth","y","forEach","loop","requestAnimationFrame","setState","e","toUpperCase","randomIndex","Math","floor","random","length","min","max","stopGame","cancelAnimationFrame","startGame","drawLetter","left","top","undefined","render","a"],"mappings":"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","sourcesContent":["import React from 'react';\n\n\nconst letterList = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \n                    \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \n                    \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \n                    \"S\", \"T\", \"U\", \"V\", \"W\", \n                    \"X\", \"Y\", \"Z\"]\n\n\nclass Game extends React.Component{\n   \n    constructor(){\n        super()\n        this.state = {\n            gameSpeed: 1,\n            loop: undefined,\n            letters: [],\n            pressedLetters: [],\n            lettersGenerated: 0\n        }\n    }\n\n    componentDidMount = () => {\n        document.addEventListener(\"keydown\", this.handleKeyPress)\n        this.mainLoop()\n    }\n\n    mainLoop = () => {\n        let {gameSpeed, letters, lettersGenerated, pressedLetters} = this.state\n        \n        gameSpeed += 0.005\n        if(gameSpeed > 2){\n            gameSpeed = 1\n        }\n\n        if(pressedLetters){\n            letters = letters.map(letter => {\n                if(pressedLetters.indexOf(letter.letter) === -1){\n                    return letter\n                }\n            })\n            pressedLetters =Â []\n        }\n\n        if(gameSpeed === 1){\n            lettersGenerated++\n\n            const randomLetter = this.getRandomeLetter()\n            letters.push({\n                letter: randomLetter,\n                key: lettersGenerated,\n                position: {\n                    x: this.getRandom(0, window.innerWidth),\n                    y: 20,\n                }\n            })\n        }\n\n        letters.forEach(letter => {\n            letter.position.y += 0.1\n        })\n\n\n        const loop = requestAnimationFrame(this.mainLoop);\n        this.setState({letters, lettersGenerated, gameSpeed, loop})\n    }\n\n    handleKeyPress = (e) => {\n        let pressedLetters = this.state.pressedLetters\n        pressedLetters.push(e.key.toUpperCase())\n        this.setState({pressedLetters})\n    }\n\n    getRandomeLetter = () => {\n        const randomIndex = Math.floor((Math.random() * letterList.length) + 1);\n        return letterList[randomIndex]\n    }\n\n    getRandom = (min, max) => {\n        return Math.random() * (max - min) + min;\n    }\n\n    stopGame = () => {\n        cancelAnimationFrame(this.state.loop)\n    }\n\n    startGame = () => {\n        const loop = requestAnimationFrame(this.mainLoop);\n        this.setState({loop})\n    }\n\n    drawLetter = (letter) => {\n        return (\n            <span key={letter.key} style={\n                {\n                    position: \"absolute\", \n                    left: letter.position.x,\n                    top: letter.position.y\n                }\n            }>{letter.letter}</span>\n        )\n    }\n\n    render(){\n        const letters = this.state.letters\n        return(\n            <div className=\"game\">\n                <h1>speed: {this.state.gameSpeed}</h1>\n                <h1>loop: {this.state.lettersGenerated}</h1>\n                <button onClick={this.stopGame}>STOP</button>\n                <button onClick={this.startGame}>START</button>\n                <p>{this.state.a}</p>\n                {letters && letters.map(letter => this.drawLetter(letter))}\n            </div>\n        )\n    }\n}\n\nexport default Game"]},"metadata":{},"sourceType":"module"}