{"ast":null,"code":"var _jsxFileName = \"/Users/gastonfernandez/workspace/falling-letters/client/src/components/Game.js\";\nimport React from 'react';\nimport explosion from '../assets/explode.gif';\nconst letterList = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"];\n\nclass Letter {\n  constructor(key, letter, x, y) {\n    this.key = key;\n    this.letter = letter;\n    this.x = x;\n    this.y = y;\n    this.count = 0;\n    this.active = true;\n\n    this.render = function () {\n      return React.createElement(\"span\", {\n        className: \"letter\",\n        key: this.key,\n        style: {\n          position: \"absolute\",\n          left: this.x,\n          top: this.y\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, this.letter);\n    };\n\n    this.exploding = function () {\n      return React.createElement(\"img\", {\n        key: \"exp_\".concat(this.key),\n        src: explosion,\n        style: {\n          position: \"absolute\",\n          left: this.x - 30,\n          top: this.y,\n          width: 100\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      });\n    };\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = () => {\n      document.addEventListener(\"keydown\", this.handleKeyPress);\n      this.mainLoop();\n    };\n\n    this.mainLoop = () => {\n      let _this$state = this.state,\n          score = _this$state.score,\n          gameSpeed = _this$state.gameSpeed,\n          letters = _this$state.letters,\n          lettersGenerated = _this$state.lettersGenerated,\n          pressedLetters = _this$state.pressedLetters,\n          speedIncrement = _this$state.speedIncrement,\n          fallingSpeed = _this$state.fallingSpeed,\n          gameOver = _this$state.gameOver;\n\n      if (!gameOver) {\n        //Increment speeds\n        if (lettersGenerated % 10 === 0) {\n          speedIncrement += 0.0001;\n        }\n\n        if (lettersGenerated % 5 === 0) {\n          fallingSpeed += 0.01;\n        }\n\n        gameSpeed += speedIncrement;\n\n        if (gameSpeed > 2) {\n          gameSpeed = 1;\n        } //Check if pressed letters are in the screen and remove them\n\n\n        if (pressedLetters.length > 0) {\n          let found = false;\n          pressedLetters.forEach(pl => {\n            letters.forEach(letter => {\n              if (letter.active && pl === letter.letter) {\n                letter.active = false;\n                score++;\n                found = true;\n              }\n            });\n\n            if (!found) {\n              this.shakeScreen();\n              score--;\n              found = true;\n            }\n          });\n          pressedLetters = [];\n        } //Add new letter to the screen\n\n\n        if (gameSpeed === 1) {\n          lettersGenerated++;\n          letters.push(new Letter(lettersGenerated, this.getRandomeLetter(), this.getRandom(10, window.innerWidth - 30), 20));\n\n          if (score >= 10) {\n            const r = this.getRandom(1, 6);\n\n            if (r === 2) {\n              lettersGenerated++;\n              letters.push(new Letter(lettersGenerated, this.getRandomeLetter(), this.getRandom(10, window.innerWidth - 30), 50));\n            }\n          }\n        } //Update letters position and check gameover\n\n\n        letters.forEach(letter => {\n          if (letter.active) {\n            letter.y += fallingSpeed;\n\n            if (letter.y >= window.innerHeight - 110) {\n              gameOver = true;\n            }\n          }\n        });\n        letters.forEach(letter => {\n          if (!letter.active) {\n            letter.count += 1;\n          }\n        });\n        letters = letters.filter(letter => letter.active || letter.count < 35);\n        const loop = requestAnimationFrame(this.mainLoop);\n        this.setState({\n          letters,\n          score,\n          speedIncrement,\n          lettersGenerated,\n          gameSpeed,\n          loop,\n          fallingSpeed,\n          pressedLetters,\n          gameOver\n        });\n      } else {\n        this.stopGame();\n        this.props.history.push({\n          pathname: '/gameOver',\n          state: {\n            score: this.state.score\n          }\n        });\n      }\n    };\n\n    this.shakeScreen = () => {\n      this.setState({\n        showMiss: \"inline\"\n      });\n      setTimeout(() => {\n        this.setState({\n          showMiss: \"none\"\n        });\n      }, 100);\n    };\n\n    this.handleKeyPress = e => {\n      let pressedLetters = this.state.pressedLetters;\n      pressedLetters.push(e.key.toUpperCase());\n      this.setState({\n        pressedLetters\n      });\n    };\n\n    this.getRandomeLetter = () => {\n      const randomIndex = Math.floor(Math.random() * letterList.length);\n      return letterList[randomIndex];\n    };\n\n    this.getRandom = (min, max) => {\n      return Math.floor(Math.random() * (max - min) + min);\n    };\n\n    this.stopGame = () => {\n      cancelAnimationFrame(this.state.loop);\n    };\n\n    this.startGame = () => {\n      const loop = requestAnimationFrame(this.mainLoop);\n      this.setState({\n        loop\n      });\n    };\n\n    this.drawLetter = letter => letter.active ? letter.render() : letter.exploding();\n\n    this.showExplosion = letter => {\n      setTimeout(() => {\n        const explosionList = this.state.explosionList.filter(l => {\n          return l.letter !== letter.letter;\n        });\n        this.setState({\n          explosionList\n        });\n      }, 350);\n      return React.createElement(\"img\", {\n        key: \"exp_\".concat(letter.key),\n        src: explosion,\n        style: {\n          position: \"absolute\",\n          left: letter.position.x - 30,\n          top: letter.position.y,\n          width: 100\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      });\n    };\n\n    this.state = {\n      score: 0,\n      gameSpeed: 1,\n      speedIncrement: 0.01,\n      fallingSpeed: 0.1,\n      loop: undefined,\n      letters: [],\n      pressedLetters: [],\n      lettersGenerated: 0,\n      showMiss: \"none\"\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          letters = _this$state2.letters,\n          showMiss = _this$state2.showMiss;\n    return React.createElement(\"div\", {\n      className: \"game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"miss\",\n      style: {\n        display: showMiss\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"score\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \"Score \", this.state.score), letters && letters.map(letter => this.drawLetter(letter)), React.createElement(\"div\", {\n      className: \"gameOverSection\",\n      style: {\n        top: window.innerHeight - 100\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, \"GAME OVER\"));\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/Users/gastonfernandez/workspace/falling-letters/client/src/components/Game.js"],"names":["React","explosion","letterList","Letter","constructor","key","letter","x","y","count","active","render","position","left","top","exploding","width","Game","Component","componentDidMount","document","addEventListener","handleKeyPress","mainLoop","state","score","gameSpeed","letters","lettersGenerated","pressedLetters","speedIncrement","fallingSpeed","gameOver","length","found","forEach","pl","shakeScreen","push","getRandomeLetter","getRandom","window","innerWidth","r","innerHeight","filter","loop","requestAnimationFrame","setState","stopGame","props","history","pathname","showMiss","setTimeout","e","toUpperCase","randomIndex","Math","floor","random","min","max","cancelAnimationFrame","startGame","drawLetter","showExplosion","explosionList","l","undefined","display","map"],"mappings":"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","sourcesContent":["import React from 'react';\nimport explosion from '../assets/explode.gif'\n\nconst letterList = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \n                    \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \n                    \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \n                    \"S\", \"T\", \"U\", \"V\", \"W\", \n                    \"X\", \"Y\", \"Z\"]\n\n\n\nclass Letter {\n    constructor(key, letter, x, y) {\n        this.key = key;\n        this.letter = letter;\n        this.x = x;\n        this.y = y;\n        this.count = 0;\n        this.active = true;\n        this.render = function () {\n            return (<span className=\"letter\" key={this.key} style={{\n                position: \"absolute\",\n                left: this.x,\n                top: this.y\n            }}>\n                {this.letter}\n            </span>);\n        };\n        this.exploding = function () {\n            return (<img key={`exp_${this.key}`} src={explosion} style={{\n                position: \"absolute\",\n                left: this.x - 30,\n                top: this.y,\n                width: 100\n            }} />);\n        };\n    }\n}\n\nclass Game extends React.Component{\n   \n    constructor(){\n        super()\n        this.state = {\n            score: 0,\n            gameSpeed: 1,\n            speedIncrement: 0.01,\n            fallingSpeed: 0.1,\n            loop: undefined,\n            letters: [],\n            pressedLetters: [],\n            lettersGenerated: 0,\n            showMiss: \"none\"\n        }\n    }\n\n    componentDidMount = () => {\n        document.addEventListener(\"keydown\", this.handleKeyPress)\n        this.mainLoop()\n    }\n\n    mainLoop = () => {\n        let {score, gameSpeed, letters, \n            lettersGenerated, pressedLetters,\n            speedIncrement, fallingSpeed, gameOver} = this.state\n        \n        if(!gameOver) {\n            //Increment speeds\n            if(lettersGenerated % 10 === 0){\n                speedIncrement += 0.0001\n            }\n    \n            if(lettersGenerated % 5 === 0){\n                fallingSpeed += 0.01\n            }\n    \n            gameSpeed += speedIncrement\n            if(gameSpeed > 2){\n                gameSpeed = 1\n            }\n    \n\n            //Check if pressed letters are in the screen and remove them\n            if(pressedLetters.length > 0){\n                \n                let found = false;\n                pressedLetters.forEach(pl => {\n                    letters.forEach(letter => {\n                        if(letter.active && pl === letter.letter){\n                            letter.active = false;\n                            score++;\n                            found = true;\n                        }\n                    })\n\n                    if(!found){\n                        this.shakeScreen();\n                        score--;\n                        found = true;\n                    }\n                })\n\n                pressedLetters = []\n            }\n    \n            //Add new letter to the screen\n            if(gameSpeed === 1){\n                lettersGenerated++\n                letters.push(new Letter(lettersGenerated, this.getRandomeLetter(), this.getRandom(10, window.innerWidth-30), 20))\n\n                if(score >= 10){\n                    const r = this.getRandom(1, 6)\n                    if(r === 2){\n                        lettersGenerated++\n                        letters.push(new Letter(lettersGenerated, this.getRandomeLetter(), this.getRandom(10, window.innerWidth-30), 50))\n                    }\n                }\n            }\n            \n            //Update letters position and check gameover\n            letters.forEach(letter => {\n                if(letter.active){\n                    letter.y += fallingSpeed\n                    if(letter.y >= (window.innerHeight-110)){\n                        gameOver = true\n                    }\n                }\n            })\n            \n            letters.forEach(letter => {\n                if(!letter.active){ \n                    letter.count += 1;\n                }\n            })\n\n            letters = letters.filter(letter => letter.active || letter.count < 35)\n\n            const loop = requestAnimationFrame(this.mainLoop);\n            this.setState({\n                letters,\n                score, \n                speedIncrement, \n                lettersGenerated, \n                gameSpeed, \n                loop,\n                fallingSpeed, \n                pressedLetters, \n                gameOver\n            })\n        }else{\n            this.stopGame()\n            this.props.history.push({pathname: '/gameOver', state:{score: this.state.score}})\n        }\n    }\n\n    shakeScreen = () => {\n        this.setState({showMiss: \"inline\"})\n        setTimeout(() => {\n            this.setState({showMiss: \"none\"})        \n        }, 100);\n    }\n\n    handleKeyPress = (e) => {\n        let pressedLetters = this.state.pressedLetters\n        pressedLetters.push(e.key.toUpperCase())\n        this.setState({pressedLetters})\n    }\n\n    getRandomeLetter = () => {\n        const randomIndex = Math.floor((Math.random() * letterList.length));\n        return letterList[randomIndex]\n    }\n\n    getRandom = (min, max) => {\n        return Math.floor(Math.random() * (max - min) + min);\n    }\n\n    stopGame = () => {\n        cancelAnimationFrame(this.state.loop)\n    }\n\n    startGame = () => {\n        const loop = requestAnimationFrame(this.mainLoop);\n        this.setState({loop})\n    }\n\n    drawLetter = (letter) => letter.active ? letter.render() : letter.exploding();\n\n    showExplosion = (letter) => {\n        setTimeout(() => {\n            const explosionList = this.state.explosionList.filter(l => {\n                return l.letter !== letter.letter\n            })\n            this.setState({explosionList})\n        }, 350);\n\n        return (<img key={`exp_${letter.key}`} src={explosion} \n                style={{\n                    position: \"absolute\",\n                    left: letter.position.x-30,\n                    top: letter.position.y,\n                    width: 100\n                }}/>)\n    }\n\n    render(){\n        const {letters, showMiss } = this.state\n        return(\n            <div className=\"game\">\n                <div className=\"miss\" style={{display: showMiss}} />\n                <p className=\"score\">Score {this.state.score}</p>\n                \n                {letters && letters.map(letter => this.drawLetter(letter))}\n\n                {/* {explosionList && explosionList.map(letter => this.showExplosion(letter))} */}\n                <div className=\"gameOverSection\" style={{top: (window.innerHeight-100)}}>GAME OVER</div>\n            </div>\n        )\n    }\n}\n\nexport default Game"]},"metadata":{},"sourceType":"module"}