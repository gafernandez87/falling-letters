{"ast":null,"code":"var _jsxFileName = \"/Users/gastonfernandez/workspace/falling-letters/src/components/Game.js\";\nimport React from 'react';\nconst letterList = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"];\n\nclass Game extends React.Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = () => {\n      document.addEventListener(\"keydown\", this.handleKeyPress);\n      this.mainLoop();\n    };\n\n    this.mainLoop = () => {\n      let _this$state = this.state,\n          score = _this$state.score,\n          gameSpeed = _this$state.gameSpeed,\n          letters = _this$state.letters,\n          lettersGenerated = _this$state.lettersGenerated,\n          pressedLetters = _this$state.pressedLetters,\n          speedIncrement = _this$state.speedIncrement,\n          fallingSpeed = _this$state.fallingSpeed;\n\n      if (lettersGenerated % 10 === 0) {\n        speedIncrement += 0.0001;\n      }\n\n      if (lettersGenerated % 5 === 0) {\n        fallingSpeed += 0.01;\n      }\n\n      gameSpeed += speedIncrement;\n\n      if (gameSpeed > 2) {\n        gameSpeed = 1;\n      }\n\n      if (pressedLetters) {\n        const countBefore = letters.length;\n        letters = letters.filter(letter => {\n          return pressedLetters.indexOf(letter.letter) === -1;\n        });\n        score += countBefore - letters.length;\n        pressedLetters = [];\n      }\n\n      if (gameSpeed === 1) {\n        lettersGenerated++;\n        const randomLetter = this.getRandomeLetter();\n        letters.push({\n          letter: randomLetter,\n          key: lettersGenerated,\n          position: {\n            x: this.getRandom(0, window.innerWidth),\n            y: 20\n          }\n        });\n      }\n\n      letters.forEach(letter => {\n        letter.position.y += fallingSpeed;\n      });\n      const loop = requestAnimationFrame(this.mainLoop);\n      this.setState({\n        score,\n        letters,\n        speedIncrement,\n        lettersGenerated,\n        gameSpeed,\n        loop,\n        fallingSpeed,\n        pressedLetters\n      });\n    };\n\n    this.handleKeyPress = e => {\n      let pressedLetters = this.state.pressedLetters;\n      pressedLetters.push(e.key.toUpperCase());\n      this.setState({\n        pressedLetters\n      });\n    };\n\n    this.getRandomeLetter = () => {\n      const randomIndex = Math.floor(Math.random() * letterList.length + 1);\n      return letterList[randomIndex];\n    };\n\n    this.getRandom = (min, max) => {\n      return Math.random() * (max - min) + min;\n    };\n\n    this.stopGame = () => {\n      cancelAnimationFrame(this.state.loop);\n    };\n\n    this.startGame = () => {\n      const loop = requestAnimationFrame(this.mainLoop);\n      this.setState({\n        loop\n      });\n    };\n\n    this.drawLetter = letter => {\n      return React.createElement(\"span\", {\n        className: \"letter\",\n        key: letter.key,\n        style: {\n          position: \"absolute\",\n          left: letter.position.x,\n          top: letter.position.y\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, letter.letter);\n    };\n\n    this.state = {\n      score: 0,\n      gameSpeed: 1,\n      speedIncrement: 0.01,\n      fallingSpeed: 0.1,\n      loop: undefined,\n      letters: [],\n      pressedLetters: [],\n      lettersGenerated: 0\n    };\n  }\n\n  render() {\n    const letters = this.state.letters;\n    return React.createElement(\"div\", {\n      className: \"game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Score: \", this.state.score), React.createElement(\"button\", {\n      onClick: this.stopGame,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"STOP\"), React.createElement(\"button\", {\n      onClick: this.startGame,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"START\"), letters && letters.map(letter => this.drawLetter(letter)));\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/Users/gastonfernandez/workspace/falling-letters/src/components/Game.js"],"names":["React","letterList","Game","Component","constructor","componentDidMount","document","addEventListener","handleKeyPress","mainLoop","state","score","gameSpeed","letters","lettersGenerated","pressedLetters","speedIncrement","fallingSpeed","countBefore","length","filter","letter","indexOf","randomLetter","getRandomeLetter","push","key","position","x","getRandom","window","innerWidth","y","forEach","loop","requestAnimationFrame","setState","e","toUpperCase","randomIndex","Math","floor","random","min","max","stopGame","cancelAnimationFrame","startGame","drawLetter","left","top","undefined","render","map"],"mappings":"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","sourcesContent":["import React from 'react';\n\n\nconst letterList = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \n                    \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \n                    \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \n                    \"S\", \"T\", \"U\", \"V\", \"W\", \n                    \"X\", \"Y\", \"Z\"]\n\n\nclass Game extends React.Component{\n   \n    constructor(){\n        super()\n        this.state = {\n            score: 0,\n            gameSpeed: 1,\n            speedIncrement: 0.01,\n            fallingSpeed: 0.1,\n            loop: undefined,\n            letters: [],\n            pressedLetters: [],\n            lettersGenerated: 0\n        }\n    }\n\n    componentDidMount = () => {\n        document.addEventListener(\"keydown\", this.handleKeyPress)\n        this.mainLoop()\n    }\n\n    mainLoop = () => {\n        let {score, gameSpeed, letters, \n            lettersGenerated, pressedLetters,\n            speedIncrement, fallingSpeed} = this.state\n        \n        \n        if(lettersGenerated % 10 === 0){\n            speedIncrement += 0.0001\n        }\n\n        if(lettersGenerated % 5 === 0){\n            fallingSpeed += 0.01\n        }\n\n        gameSpeed += speedIncrement\n        if(gameSpeed > 2){\n            gameSpeed = 1\n        }\n\n        if(pressedLetters){\n            const countBefore = letters.length\n            letters = letters.filter(letter => {\n                return pressedLetters.indexOf(letter.letter) === -1\n            })\n\n            score += countBefore - letters.length\n\n            pressedLetters = []\n        }\n\n        if(gameSpeed === 1){\n            lettersGenerated++\n\n            const randomLetter = this.getRandomeLetter()\n            letters.push({\n                letter: randomLetter,\n                key: lettersGenerated,\n                position: {\n                    x: this.getRandom(0, window.innerWidth),\n                    y: 20,\n                }\n            })\n        }\n        \n        letters.forEach(letter => {\n            letter.position.y += fallingSpeed\n        })\n\n\n        const loop = requestAnimationFrame(this.mainLoop);\n        this.setState({score, letters, speedIncrement, \n                        lettersGenerated, gameSpeed, loop,\n                        fallingSpeed, pressedLetters})\n    }\n\n    handleKeyPress = (e) => {\n        let pressedLetters = this.state.pressedLetters\n        pressedLetters.push(e.key.toUpperCase())\n        this.setState({pressedLetters})\n    }\n\n    getRandomeLetter = () => {\n        const randomIndex = Math.floor((Math.random() * letterList.length) + 1);\n        return letterList[randomIndex]\n    }\n\n    getRandom = (min, max) => {\n        return Math.random() * (max - min) + min;\n    }\n\n    stopGame = () => {\n        cancelAnimationFrame(this.state.loop)\n    }\n\n    startGame = () => {\n        const loop = requestAnimationFrame(this.mainLoop);\n        this.setState({loop})\n    }\n\n    drawLetter = (letter) => {\n        return (\n            <span className=\"letter\" key={letter.key} style={\n                {\n                    position: \"absolute\", \n                    left: letter.position.x,\n                    top: letter.position.y\n                }\n            }>{letter.letter}</span>\n        )\n    }\n\n    render(){\n        const letters = this.state.letters\n        return(\n            <div className=\"game\">\n                <h1>Score: {this.state.score}</h1>\n                <button onClick={this.stopGame}>STOP</button>\n                <button onClick={this.startGame}>START</button>\n                {letters && letters.map(letter => this.drawLetter(letter))}\n            </div>\n        )\n    }\n}\n\nexport default Game"]},"metadata":{},"sourceType":"module"}