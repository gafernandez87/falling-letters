{"ast":null,"code":"var _jsxFileName = \"/Users/gastonfernandez/workspace/falling-letters/src/components/Game.js\";\nimport React from 'react';\n\nclass Game extends React.Component {\n  constructor() {\n    super();\n    state = {\n      timestamp: 0\n    };\n  }\n\n  componentDidMount() {\n    mainLoop(this.state.timestamp);\n  }\n\n  mainLoop(timestamp) {\n    // ...\n    // Track the accumulated time that hasn't been simulated yet\n    delta += timestamp - lastFrameTimeMs; // note += here\n\n    lastFrameTimeMs = timestamp; // Simulate the total elapsed time in fixed-size chunks\n\n    while (delta >= timestep) {\n      update(timestep);\n      delta -= timestep;\n    }\n\n    draw();\n    requestAnimationFrame(mainLoop);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Im Game\");\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/Users/gastonfernandez/workspace/falling-letters/src/components/Game.js"],"names":["React","Game","Component","constructor","state","timestamp","componentDidMount","mainLoop","delta","lastFrameTimeMs","timestep","update","draw","requestAnimationFrame","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,IAAN,SAAmBD,KAAK,CAACE,SAAzB,CAAkC;AAC9BC,EAAAA,WAAW,GAAE;AACT;AACAC,IAAAA,KAAK,GAAG;AACJC,MAAAA,SAAS,EAAE;AADP,KAAR;AAIH;;AAEDC,EAAAA,iBAAiB,GAAE;AACfC,IAAAA,QAAQ,CAAC,KAAKH,KAAL,CAAWC,SAAZ,CAAR;AACH;;AAEDE,EAAAA,QAAQ,CAACF,SAAD,EAAY;AAChB;AAEA;AACAG,IAAAA,KAAK,IAAIH,SAAS,GAAGI,eAArB,CAJgB,CAIsB;;AACtCA,IAAAA,eAAe,GAAGJ,SAAlB,CALgB,CAOhB;;AACA,WAAOG,KAAK,IAAIE,QAAhB,EAA0B;AACtBC,MAAAA,MAAM,CAACD,QAAD,CAAN;AACAF,MAAAA,KAAK,IAAIE,QAAT;AACH;;AACDE,IAAAA,IAAI;AACJC,IAAAA,qBAAqB,CAACN,QAAD,CAArB;AACH;;AAEDO,EAAAA,MAAM,GAAE;AACJ,WACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ;AAGH;;AAjC6B;;AAoClC,eAAeb,IAAf","sourcesContent":["import React from 'react';\n\nclass Game extends React.Component{\n    constructor(){\n        super()\n        state = {\n            timestamp: 0\n        }\n\n    }\n\n    componentDidMount(){\n        mainLoop(this.state.timestamp)\n    }\n\n    mainLoop(timestamp) {\n        // ...\n     \n        // Track the accumulated time that hasn't been simulated yet\n        delta += timestamp - lastFrameTimeMs; // note += here\n        lastFrameTimeMs = timestamp;\n     \n        // Simulate the total elapsed time in fixed-size chunks\n        while (delta >= timestep) {\n            update(timestep);\n            delta -= timestep;\n        }\n        draw();\n        requestAnimationFrame(mainLoop);\n    }\n\n    render(){\n        return(\n            <div className=\"game\">Im Game</div>\n        )\n    }\n}\n\nexport default Game"]},"metadata":{},"sourceType":"module"}